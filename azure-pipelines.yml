trigger:
  branches:
    exclude:
      - docs
      - gh-pages

schedules:
  - cron: "0 3 * * 0"
    displayName: "Weekly Build"
    branches:
      include:
        - main
    always: true

variables:
  - name: vcpkg.commit
    value: "cef0b3ec767df6e83806899fe9525f6cf8d7bc91" # mainstream 2022.06.16.1
  - name: vcpkg.feature.flags
    value: "versions,manifests,registries,binarycaching"
  - name: vcpkg.default.binary.cache
    value: $(Build.BinariesDirectory)/vcpkg-caches
  - name: GRADLE_USER_HOME
    value: $(Pipeline.Workspace)/.gradle

jobs:
  - job: build_gradle
    pool:
      vmImage: "macOS-latest"
    variables:
      VCPKG_ROOT: "/usr/local/share/vcpkg" # see VCPKG_INSTALLATION_ROOT
      ANDROID_NDK_HOME: "/Users/runner/Library/Android/sdk/ndk/24.0.8215888" # see scripts/azure-pipelines.sh, check $ANDROID_SDK_ROOT
      # SUPPORT_PREFAB: "true"
    steps:
      - checkout: self
      - powershell: brew install ninja tree
        displayName: "Install Homebrew packages"
      # - bash: |
      #     bash ./scripts/azure-pipelines.sh > /dev/null
      #     touch local.properties
      #     echo "ndk.dir=${ANDROID_NDK_HOME}" >> local.properties
      #     cat local.properties
      #   displayName: "Install Android SDK"
      - powershell: New-Item -Type Directory -Force ${env:VCPKG_DEFAULT_BINARY_CACHE}
      - task: Cache@2
        inputs:
          key: "gradle | $(Agent.OS)"
          path: $(GRADLE_USER_HOME)
        displayName: "Cache: Gradle"
      - powershell: |
          $env:JAVA_HOME=$env:JAVA_HOME_11_X64
          gradle wrapper --info
        displayName: "Gradle: wrapper"
      - task: Gradle@2
        inputs:
          gradleWrapperFile: "gradlew"
          publishJUnitResults: false
          gradleOptions: "-Xmx3072m"
          jdkVersionOption: 1.11
          tasks: "androidDependencies"
        displayName: "Gradle: androidDependencies"
      - task: Gradle@2
        inputs:
          gradleWrapperFile: "gradlew"
          publishJUnitResults: false
          checkStyleRunAnalysis: true
          gradleOptions: "-Xmx3072m"
          jdkVersionOption: 1.11
          tasks: "assembleDebug"
          options: "--info"
        displayName: "Gradle: assembleDebug"
      - task: Gradle@2
        inputs:
          gradleWrapperFile: "gradlew"
          publishJUnitResults: false
          checkStyleRunAnalysis: true
          gradleOptions: "-Xmx3072m"
          jdkVersionOption: 1.11
          tasks: "assemble assembleAndroidTest"
          options: "--warning-mode all"
        displayName: "Gradle: assemble"
      # - task: Gradle@2
      #   inputs:
      #     gradleWrapperFile: "gradlew"
      #     publishJUnitResults: true
      #     jdkVersionOption: 1.11
      #     testResultsFiles: '**/TEST-*.xml'
      #     tasks: "connectedAndroidTest createDebugCoverageReport"
      #   displayName: "Gradle: connectedAndroidTest"
      - task: CopyFiles@2
        inputs:
          contents: "$(Build.SourcesDirectory)/muffin/build/outputs/aar/*.aar"
          targetFolder: "$(Build.ArtifactStagingDirectory)"
      - task: PublishBuildArtifacts@1

  - job: build_cmake
    pool:
      vmImage: "ubuntu-22.04"
    strategy:
      matrix:
        debug_arm64:
          cmake.preset: arm64-android-debug
          build.triplet: arm64-android
        debug_arm:
          cmake.preset: arm-android-debug
          build.triplet: arm-android
        debug_x64:
          cmake.preset: x64-android-debug
          build.triplet: x64-android
    variables:
      ANDROID_NDK_HOME: "/usr/local/lib/android/sdk/ndk/23.2.8568313" # check $ANDROID_NDK_LATEST_HOME
    steps:
      - checkout: self
      - powershell: sudo apt-get install -y --fix-missing ninja-build tree curl zip unzip tar rsync
        displayName: "Install: APT packages"
      - powershell: New-Item -Type Directory -Force ${env:VCPKG_DEFAULT_BINARY_CACHE}
      - task: Cache@2
        inputs:
          key: "2022-07 | vcpkg-android | $(build.triplet)"
          path: $(vcpkg.default.binary.cache)
        displayName: "Cache: Vcpkg"
      - task: run-vcpkg@0
        displayName: "Install: Vcpkg"
        inputs:
          vcpkgGitCommitId: $(vcpkg.commit)
          vcpkgArguments: "spdlog curl[openssl]"
          workingDirectory: muffin
        env:
          VCPKG_DEFAULT_TRIPLET: $(build.triplet)
      - task: CMake@1
        displayName: "CMake: Configure/Generate"
        inputs:
          cmakeArgs: "--preset=$(cmake.preset)"
          workingDirectory: muffin # $(Build.SourcesDirectory)
      - task: CMake@1
        displayName: "CMake: Build"
        inputs:
          cmakeArgs: "--build --preset=$(cmake.preset)"
          workingDirectory: muffin
